version: "3"

services:
  app:
    build: .
    ports:
      - "8000:8000"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./.logs:/app/.logs
    environment:
      - APP_ENVIRONMENT=${APP_ENVIRONMENT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=${JWT_REFRESH_TOKEN_EXPIRE_MINUTES}
    networks:
      - app-network
    depends_on:
      - db

  nginx:
    restart: unless-stopped
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/user_conf.d:ro
    depends_on:
      - app
    networks:
      - app-network
  
  db:
    build:
      context: .
      dockerfile: Dockerfile.pg
    ports:
      - "5432:5432"
    volumes:
      - pgsql_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGUSER=${DB_USERNAME}
    networks:
      - app-network

networks:
  app-network:

volumes:
  pgsql_volume: {}